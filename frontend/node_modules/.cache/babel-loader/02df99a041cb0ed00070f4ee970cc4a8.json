{"ast":null,"code":"var _jsxFileName = \"/home/mcatanese/workout-logger-assignment/frontend/src/components/WorkoutPlot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WorkoutPlot() {\n  _s();\n  const [workouts, setWorkouts] = useState([]);\n  useEffect(() => {\n    const fetchWorkouts = async () => {\n      const response = await fetch('/api/workouts');\n      const data = await response.json();\n      setWorkouts(data);\n    };\n    fetchWorkouts();\n  }, []);\n  const data = {\n    labels: workouts.map(workout => workout.date),\n    datasets: [{\n      label: 'Workout Duration (minutes)',\n      data: workouts.map(workout => workout.duration),\n      borderColor: 'rgba(75,192,192,1)',\n      fill: false\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 12\n  }, this);\n}\n_s(WorkoutPlot, \"ZaC+wmQEq4AhY3XQvUqvH75nL9s=\");\n_c = WorkoutPlot;\nexport default WorkoutPlot;\nvar _c;\n$RefreshReg$(_c, \"WorkoutPlot\");","map":{"version":3,"names":["React","useEffect","useState","Line","jsxDEV","_jsxDEV","WorkoutPlot","_s","workouts","setWorkouts","fetchWorkouts","response","fetch","data","json","labels","map","workout","date","datasets","label","duration","borderColor","fill","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mcatanese/workout-logger-assignment/frontend/src/components/WorkoutPlot.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\n\nfunction WorkoutPlot() {\n    const [workouts, setWorkouts] = useState([]);\n\n    useEffect(() => {\n        const fetchWorkouts = async () => {\n            const response = await fetch('/api/workouts');\n            const data = await response.json();\n            setWorkouts(data);\n        };\n        fetchWorkouts();\n    }, []);\n\n    const data = {\n        labels: workouts.map(workout => workout.date),\n        datasets: [\n            {\n                label: 'Workout Duration (minutes)',\n                data: workouts.map(workout => workout.duration),\n                borderColor: 'rgba(75,192,192,1)',\n                fill: false,\n            },\n        ],\n    };\n\n    return <Line data={data} />;\n}\n\nexport default WorkoutPlot;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,CAAC;MAC7C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,WAAW,CAACI,IAAI,CAAC;IACrB,CAAC;IACDH,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,IAAI,GAAG;IACTE,MAAM,EAAEP,QAAQ,CAACQ,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAAC;IAC7CC,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,4BAA4B;MACnCP,IAAI,EAAEL,QAAQ,CAACQ,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACI,QAAQ,CAAC;MAC/CC,WAAW,EAAE,oBAAoB;MACjCC,IAAI,EAAE;IACV,CAAC;EAET,CAAC;EAED,oBAAOlB,OAAA,CAACF,IAAI;IAACU,IAAI,EAAEA;EAAK;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC/B;AAACpB,EAAA,CAzBQD,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AA2BpB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}